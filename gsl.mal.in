# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2017 MonetDB B.V.
# Copyright 2018 Mark Clements

module gsl;
module batgsl;
divert(`-1')

define(`CONSTANTFUN',`# $1
function gsl.$2():dbl;
  value:dbl := $3;
  return value;
end;
')
define(`FUNCTION0',`command gsl.$2():dbl
  address gsl_$2
  comment "$1";
command batgsl.$2():bat[:dbl]
  address batgsl_$2
  comment "$1";
')
define(`FUNCTION1',`command gsl.$2($4:$3):dbl
  address gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3]):bat[:dbl]
  address bat_gsl_$2
  comment "$1";
')
define(`FUNCTION2',`command gsl.$2($4:$3,$6:$5):dbl
  address gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:$5):bat[:dbl]
  address bat_gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:bat[:$5]):bat[:dbl]
  address bat_gsl_bats_$2
  comment "$1";
')
define(`FUNCTION3',`command gsl.$2($4:$3,$6:$5,$8:$7):dbl
  address gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:$5,$8:$7):bat[:dbl]
  address bat_gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7]):bat[:dbl]
  address bat_gsl_bats_$2
  comment "$1";
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:$7):bat[:dbl];
  third:bat[:$7] := algebra.project($4,$8:$7);
  out:bat[:dbl] := batgsl.$2($4,$6,third);
  return out;
end;
')
define(`FUNCTION4',`command gsl.$2($4:$3,$6:$5,$8:$7,$10:$9):dbl
  address gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:$5,$8:$7,$10:$9):bat[:dbl]
  address bat_gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7],$10:bat[:$9]):bat[:dbl]
  address bat_gsl_bats_$2
  comment "$1";
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:$7,$10:$9):bat[:dbl];
  third:bat[:$7] := algebra.project($4,$8:$7);
  fourth:bat[:$9] := algebra.project($4,$10:$9);
  out:bat[:dbl] := batgsl.$2($4,$6,third,fourth);
  return out;
end;
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7],$10:$9):bat[:dbl];
  fourth:bat[:$9] := algebra.project($4,$10:$9);
  out:bat[:dbl] := batgsl.$2($4,$6,$8,fourth);
  return out;
end;
')
define(`FUNCTION5',`command gsl.$2($4:$3,$6:$5,$8:$7,$10:$9,$12:$11):dbl
  address gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:$5,$8:$7,$10:$9,$12:$11):bat[:dbl]
  address bat_gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7],$10:bat[:$9],$12:bat[:$11]):bat[:dbl]
  address bat_gsl_bats_$2
  comment "$1";
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:$7,$10:$9,$12:$11):bat[:dbl];
  third:bat[$7] := algebra.project($4,$8:$7);
  fourth:bat[:$9] := algebra.project($4,$10:$9);
  fifth:bat[:$11] := algebra.project($4,$12:$11);
  out:bat[:dbl] := batgsl.$2($4,$6,third,fourth,fifth);
  return out;
end;
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7],$10:$9,$12:$11):bat[:dbl];
  fourth:bat[:$9] := algebra.project($4,$10:$9);
  fifth:bat[:$11] := algebra.project($4,$12:$11);
  out:bat[:dbl] := batgsl.$2($4,$6,$8,fourth,fifth);
  return out;
end;
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7],$10:bat[:$9],$12:$11):bat[:dbl];
  fifth:bat[:$11] := algebra.project($4,$12:$11);
  out:bat[:dbl] := batgsl.$2($4,$6,$8,$10,fifth);
  return out;
end;
')
define(`FUNCTION6',`command gsl.$2($4:$3,$6:$5,$8:$7,$10:$9,$12:$11,$14:$13):dbl
  address gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:$5,$8:$7,$10:$9,$12:$11,$14:$13):bat[:dbl]
  address bat_gsl_$2
  comment "$1";
command batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7],$10:bat[:$9],$12:bat[:$11],$14:bat[:$13]):bat[:dbl]
  address bat_gsl_bats_$2
  comment "$1";
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:$7,$10:$9,$12:$11,$14:$13):bat[:dbl];
  third:bat[$7] := algebra.project($4,$8:$7);
  fourth:bat[$9] := algebra.project($4,$10:$9);
  fifth:bat[$11] := algebra.project($4,$12:$11);
  sixth:bat[$13] := algebra.project($4,$14:$13);
  out:bat[:dbl] := batgsl.$2($4,$6,third,fourth,fifth,sixth);
  return out;
end;
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7],$10:$9,$12:$11,$14:$13):bat[:dbl];
  fourth:bat[$9] := algebra.project($4,$10:$9);
  fifth:bat[$11] := algebra.project($4,$12:$11);
  sixth:bat[$13] := algebra.project($4,$14:$13);
  out:bat[:dbl] := batgsl.$2($4,$6,$8,fourth,fifth,sixth);
  return out;
end;
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7],$10:bat[:$9],$12:$11,$14:$13):bat[:dbl];
  fifth:bat[$11] := algebra.project($4,$12:$11);
  sixth:bat[$13] := algebra.project($4,$14:$13);
  out:bat[:dbl] := batgsl.$2($4,$6,$8,$10,fifth,sixth);
  return out;
end;
function batgsl.$2($4:bat[:$3],$6:bat[:$5],$8:bat[:$7],$10:bat[:$9],$12:bat[:$11],$14:$13):bat[:dbl];
  sixth:bat[$13] := algebra.project($4,$14:$13);
  out:bat[:dbl] := batgsl.$2($4,$6,$8,$10,$12,sixth);
  return out;
end;
')

define(`DIST1FUNCTION',`# $1 distribution
  FUNCTION2($1 probability density function,gsl_ran_$2_pdf,dbl,x,dbl,$3)
  FUNCTION2($1 cumulative density function,gsl_cdf_$2_P,dbl,x,dbl,$3)
  FUNCTION2($1 survival function,gsl_cdf_$2_Q,dbl,x,dbl,$3)			
  FUNCTION2($1 quantile function,gsl_cdf_$2_Pinv,dbl,x,dbl,$3)			
  FUNCTION2($1 upper quantile function,gsl_cdf_$2_Qinv,dbl,x,dbl,$3)
')
define(`DIST2FUNCTION',`# $1 distribution
  FUNCTION3($1 probability density function,gsl_ran_$2_pdf,dbl,x,dbl,$3,dbl,$4)
  FUNCTION3($1 cumulative density function,gsl_cdf_$2_P,dbl,x,dbl,$3,dbl,$4)
  FUNCTION3($1 survival function,gsl_cdf_$2_Q,dbl,x,dbl,$3,dbl,$4)			
  FUNCTION3($1 quantile function,gsl_cdf_$2_Pinv,dbl,x,dbl,$3,dbl,$4)			
  FUNCTION3($1 upper quantile function,gsl_cdf_$2_Qinv,dbl,x,dbl,$3,dbl,$4)
')
define(`DIST3FUNCTION',`# $1 distribution
  FUNCTION4($1 probability density function,gsl_ran_$2_pdf,dbl,x,dbl,$3,dbl,$4,dbl,$5)
  FUNCTION4($1 cumulative density function,gsl_cdf_$2_P,dbl,x,dbl,$3,dbl,$4,dbl,$5)
  FUNCTION4($1 survival function,gsl_cdf_$2_Q,dbl,x,dbl,$3,dbl,$4,dbl,$5)			
  FUNCTION4($1 quantile function,gsl_cdf_$2_Pinv,dbl,x,dbl,$3,dbl,$4,dbl,$5)			
  FUNCTION4($1 upper quantile function,gsl_cdf_$2_Qinv,dbl,x,dbl,$3,dbl,$4,dbl,$5)
')

divert(`1')

DIST1FUNCTION(Chi-squared,chisq,nu)
DIST2FUNCTION(Gamma,gamma,a,b)

FUNCTION3(Exact Poisson confidence interval,poisson_ci,dbl,x,int,boundary,dbl,conflevel)

